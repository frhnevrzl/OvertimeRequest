// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OvertimeRequest.Context;

namespace OvertimeRequest.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210624050707_firstmigration")]
    partial class firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OvertimeRequest.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("TB_M_Account");
                });

            modelBuilder.Entity("OvertimeRequest.Models.AccountRole", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("AccountId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("TB_TR_AccountRole");
                });

            modelBuilder.Entity("OvertimeRequest.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("TB_M_Department");
                });

            modelBuilder.Entity("OvertimeRequest.Models.Employee", b =>
                {
                    b.Property<int>("NIP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("NIP");

                    b.ToTable("TB_M_Employee");
                });

            modelBuilder.Entity("OvertimeRequest.Models.OvertimeApply", b =>
                {
                    b.Property<int>("OvertimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OvertimeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OvertimeId");

                    b.ToTable("TB_M_OvertimeApply");
                });

            modelBuilder.Entity("OvertimeRequest.Models.OvertimeApplyEmployee", b =>
                {
                    b.Property<int>("OvertimeEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdditionalSalary")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeNIP")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OvertimeApplyOvertimeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Task")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OvertimeEmployeeId");

                    b.HasIndex("EmployeeNIP");

                    b.HasIndex("OvertimeApplyOvertimeId");

                    b.ToTable("TB_TR_OvertimeApplyEmployee");
                });

            modelBuilder.Entity("OvertimeRequest.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("TB_M_Role");
                });

            modelBuilder.Entity("OvertimeRequest.Models.Account", b =>
                {
                    b.HasOne("OvertimeRequest.Models.Employee", "Employee")
                        .WithOne("Account")
                        .HasForeignKey("OvertimeRequest.Models.Account", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("OvertimeRequest.Models.AccountRole", b =>
                {
                    b.HasOne("OvertimeRequest.Models.Account", "Account")
                        .WithMany("AccountRoles")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OvertimeRequest.Models.Role", "Role")
                        .WithMany("AccountRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OvertimeRequest.Models.Department", b =>
                {
                    b.HasOne("OvertimeRequest.Models.Employee", "Employee")
                        .WithOne("Department")
                        .HasForeignKey("OvertimeRequest.Models.Department", "DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("OvertimeRequest.Models.OvertimeApplyEmployee", b =>
                {
                    b.HasOne("OvertimeRequest.Models.Employee", "Employee")
                        .WithMany("OvertimeApplyEmployees")
                        .HasForeignKey("EmployeeNIP");

                    b.HasOne("OvertimeRequest.Models.OvertimeApply", "OvertimeApply")
                        .WithMany("OvertimeApplyEmployees")
                        .HasForeignKey("OvertimeApplyOvertimeId");

                    b.Navigation("Employee");

                    b.Navigation("OvertimeApply");
                });

            modelBuilder.Entity("OvertimeRequest.Models.Account", b =>
                {
                    b.Navigation("AccountRoles");
                });

            modelBuilder.Entity("OvertimeRequest.Models.Employee", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("Department");

                    b.Navigation("OvertimeApplyEmployees");
                });

            modelBuilder.Entity("OvertimeRequest.Models.OvertimeApply", b =>
                {
                    b.Navigation("OvertimeApplyEmployees");
                });

            modelBuilder.Entity("OvertimeRequest.Models.Role", b =>
                {
                    b.Navigation("AccountRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
